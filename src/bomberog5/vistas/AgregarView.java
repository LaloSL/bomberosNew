package bomberog5.vistas;

import bomberog5.accesoDatos.BomberoData;
import bomberog5.accesoDatos.BrigadaData;
import bomberog5.accesoDatos.Conexion;
import bomberog5.accesoDatos.CuartelData;
import bomberog5.entidades.Bombero;
import bomberog5.entidades.Brigada;
import bomberog5.entidades.Cuartel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;

/**
 *
 * @author Asus
 */
public class AgregarView extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo = new DefaultTableModel(); //tabla cuartel
    private DefaultTableModel modelo1 = new DefaultTableModel(); //tabla brigada
    private CuartelData cua = new CuartelData();
    private BrigadaData briga = new BrigadaData();
    private BomberoData bomb = new BomberoData();
    private Connection con = null;
    public int idCuart = 0;
    private int idCuartelSeleccionado = 0;
    private int idBrigadaSeleccionada = 0;

    public AgregarView() {
        initComponents();
        //inicioComponentes();
        cabeceraCuartel();
        cabeceraBrigadal();
        con = Conexion.getConexion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jRBCuartel = new javax.swing.JRadioButton();
        jRBBrigada = new javax.swing.JRadioButton();
        jRBBombero = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTCuartel = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTBrigada = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jNombreCuartel = new javax.swing.JTextField();
        jTDNI = new javax.swing.JTextField();
        jCoordY = new javax.swing.JTextField();
        jTGrupo = new javax.swing.JTextField();
        jDireccionCuartel = new javax.swing.JTextField();
        jCoordX = new javax.swing.JTextField();
        jTelefonoCuartel = new javax.swing.JTextField();
        jTNombre = new javax.swing.JTextField();
        jBSalir = new javax.swing.JButton();
        jBGuardarCuartel = new javax.swing.JButton();
        jBGuardarBombero = new javax.swing.JButton();
        jBGuardarBrigada = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        Correo = new javax.swing.JLabel();
        jCBEspecialidad = new javax.swing.JComboBox<>();
        jdFechaNacimiento = new com.toedter.calendar.JDateChooser();
        jLabel18 = new javax.swing.JLabel();
        jTCelular = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jCorreoCuartel = new javax.swing.JTextField();

        jLabel10.setText("jLabel10");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Formulario Agregar");

        jLabel2.setText("Seleccione lo que desea cargar");

        jRBCuartel.setText("Cuartel");
        jRBCuartel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBCuartelActionPerformed(evt);
            }
        });

        jRBBrigada.setText("Brigada");
        jRBBrigada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBBrigadaActionPerformed(evt);
            }
        });

        jRBBombero.setText("Bombero");
        jRBBombero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBBomberoActionPerformed(evt);
            }
        });

        jTCuartel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTCuartel);

        jTBrigada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTBrigada);

        jBSalir.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jBSalir.setForeground(new java.awt.Color(255, 0, 51));
        jBSalir.setText("Salir");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        jBGuardarCuartel.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jBGuardarCuartel.setForeground(new java.awt.Color(255, 0, 51));
        jBGuardarCuartel.setText("Guardar Cuartel");
        jBGuardarCuartel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarCuartelActionPerformed(evt);
            }
        });

        jBGuardarBombero.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jBGuardarBombero.setForeground(new java.awt.Color(255, 0, 51));
        jBGuardarBombero.setText("Guardar Bombero");
        jBGuardarBombero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarBomberoActionPerformed(evt);
            }
        });

        jBGuardarBrigada.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jBGuardarBrigada.setForeground(new java.awt.Color(255, 0, 51));
        jBGuardarBrigada.setText("Guardar Brigada");
        jBGuardarBrigada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarBrigadaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText("Datos Cuartel");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("Datos Brigada");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 51));
        jLabel5.setText("Datos Bomberos");

        jLabel6.setText("DNI");

        jLabel7.setText("Nombre y Apellido");

        jLabel8.setText("Grupo Sanguineo");

        jLabel9.setText("Fecha de nacimiento");

        jLabel11.setText("Nombre de la brigada");

        jLabel12.setText("Especialidad");

        jLabel13.setText("Nombre del cuartel");

        jLabel14.setText("Direccion");

        jLabel15.setText("Coordenada X");

        jLabel16.setText("Coordenada Y");

        jLabel17.setText("Telefono");

        Correo.setText("Correo");

        jCBEspecialidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel18.setText("Celular");

        jButton1.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 0, 51));
        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel17)
                    .addComponent(Correo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(499, 499, 499)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jCoordY, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTelefonoCuartel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCorreoCuartel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel2)
                                .addGap(87, 87, 87)
                                .addComponent(jRBCuartel)
                                .addGap(74, 74, 74)
                                .addComponent(jRBBrigada)
                                .addGap(64, 64, 64)
                                .addComponent(jRBBombero)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(428, 428, 428))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jDireccionCuartel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(108, 108, 108)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(jCBEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(78, 78, 78))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jNombreCuartel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(76, 76, 76))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(jBGuardarCuartel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jBGuardarBrigada)
                                        .addGap(138, 138, 138)
                                        .addComponent(jBGuardarBombero)))))
                        .addGap(390, 390, 390))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(236, 236, 236)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(157, 157, 157)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCoordX, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel18)
                                    .addComponent(jButton1))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jdFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jBSalir))))
                .addGap(101, 101, 101))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jRBCuartel)
                    .addComponent(jRBBrigada)
                    .addComponent(jRBBombero))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jNombreCuartel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel13)
                            .addComponent(jLabel11)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jDireccionCuartel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCBEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)
                                    .addComponent(jTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7))))
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCoordX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCoordY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jdFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jTCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Correo)
                            .addComponent(jCorreoCuartel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBGuardarCuartel)
                            .addComponent(jBGuardarBrigada)
                            .addComponent(jBGuardarBombero)
                            .addComponent(jButton1)
                            .addComponent(jBSalir))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTelefonoCuartel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//---------------------------------------------GUARDAR CUARTEL----------------------------------------------
    private void jBGuardarCuartelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarCuartelActionPerformed
        boolean hayErrores = false;
        String nombreCuartel = jNombreCuartel.getText();
        String direccion = jDireccionCuartel.getText();
        double longitud = 0.0, latitud = 0.0;

        try {
            longitud = Double.parseDouble(jCoordX.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ingrese valores numéricos válidos en los campos de coordenadas.");
            limpiarCampos();
            hayErrores = true;
        }

        try {
            latitud = Double.parseDouble(jCoordY.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ingrese valores numéricos válidos en los campos de coordenadas.");
            limpiarCampos();
            hayErrores = true;
        }

        String telefono = jTelefonoCuartel.getText();
        String correo = jCorreoCuartel.getText();

        //-------------------------Validacion Nombre Cuartel-----------------------------
        if (nombreCuartel.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo vacío. Por favor, ingrese un nombre al cuartel.");
            limpiarCampos();
            hayErrores = true;
        }

        // Validar que no contenga solo números
        if (!contieneLetras(nombreCuartel)) {
            JOptionPane.showMessageDialog(null, "El nombre debe contener al menos una letra.");
            limpiarCampos();
            hayErrores = true;
        }
        //------------------------- Fin Validacion Nombre Cuartel-----------------------------

        //-------------------------Validacion Direccion Cuartel-----------------------------
        if (direccion.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo vacío. Por favor, ingrese una dirección.");
            limpiarCampos();
            hayErrores = true;
        }

        // Validar que la dirección no sea solo números
        if (!contieneLetras(direccion)) {
            JOptionPane.showMessageDialog(null, "La dirección debe contener al menos una letra.");
            limpiarCampos();
            hayErrores = true;
        }
        //------------------------- Fin Validacion Direccion Cuartel-----------------------------

        //-------------------------Validacion Coordenada Cuartel-----------------------------
        String textoCoordX = jCoordX.getText().trim();
        String textoCoordY = jCoordY.getText().trim();

        if (textoCoordX.isEmpty() || textoCoordY.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Uno o ambos campos de coordenadas están vacíos. Por favor, ingrese valores.");
            limpiarCampos();
            hayErrores = true;
        }
        //------------------------- Validacion Coordenada Cuartel-----------------------------

        //-------------------------Validacion Telefono Cuartel-----------------------------
        if (telefono.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo vacío. Por favor, ingrese un número de teléfono.");
            limpiarCampos();
            hayErrores = true;
        }

        // Validar que el campo contenga solo números
        if (!esNumeroValido(telefono)) {
            JOptionPane.showMessageDialog(null, "El número de teléfono no puede contener letras ni caracteres especiales.");
            limpiarCampos();
            hayErrores = true;
        }
        //------------------------- Validacion Telefono Cuartel-----------------------------

        //------------------------- Validacion correo Cuartel-----------------------------
        if (correo.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Campo vacío. Por favor, ingrese una dirección de correo.");
            limpiarCampos();
            hayErrores = true;
        }

        if (!correo.contains("@")) {
            JOptionPane.showMessageDialog(null, "La dirección de correo no es válida. Debe contener el carácter '@'.");
            limpiarCampos();
            hayErrores = true;
        }
        //------------------------- Validacion correo Cuartel-----------------------------

        if (hayErrores) {
            JOptionPane.showMessageDialog(null, "Algun campo no cumple con los requisitos, vuelva a empezar");
            limpiarCampos();
            limpiarTabla(jTCuartel);
            inicioComponentes();
        } else {
            if (cua.existeCuartelConNombre(nombreCuartel)) {
                JOptionPane.showMessageDialog(null, "Ya existe un cuartel con el mismo nombre. No se puede agregar.");
                limpiarCampos();
                limpiarTabla(jTCuartel);
                inicioComponentes();
            } else {
                Cuartel cuar2 = new Cuartel();
                cuar2.setNombreCuartel(nombreCuartel);
                cuar2.setDireccion(direccion);
                cuar2.setLongitud(longitud);
                cuar2.setLatitud(latitud);
                cuar2.setTelefono(telefono);
                cuar2.setCorreo(correo);
                cuar2.setEstadoC(true);

                cua.guardarCuartel(cuar2);
                mostrarDatosCuartel();
                limpiarCampos();
                inicioComponentes();
            }
        }

    }//GEN-LAST:event_jBGuardarCuartelActionPerformed
//-----------------------------------Radio Button Cuartel--------------------------------
    private void jRBCuartelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBCuartelActionPerformed
        mostrarDatosCuartel();
        radioButtonCuartel();
    }//GEN-LAST:event_jRBCuartelActionPerformed

//---------------------------------------------Radio Button Brigada----------------------
    private void jRBBrigadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBBrigadaActionPerformed
        radioButtonBrigada();
        mostrarDatosCuartel();
        llenarComboEspecialidades();


    }//GEN-LAST:event_jRBBrigadaActionPerformed
//---------------------------------------------Fin Radio Button Brigada----------------------
    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jBSalirActionPerformed

//------------------------------------Radio Button Bombero-------------------------------------
    private void jRBBomberoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBBomberoActionPerformed
        radioButtonBombero();
        mostrarDatosCuartel();
        mostrarDatosBrigada();

    }//GEN-LAST:event_jRBBomberoActionPerformed
//------------------------------------ fin Radio Button Bombero-------------------------------------
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        limpiarCampos();
        inicioComponentes();
    }//GEN-LAST:event_jButton1ActionPerformed

//--------------------------------------------------------------------GUARDAR BRIGADA---------------------------------------------
    private void jBGuardarBrigadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarBrigadaActionPerformed
        idCuartelSeleccionado = obtenerIdCuartelSeleccionado();
        CuartelIna();

        boolean hayErrores = false;

        
        if (briga.hayCupoParaNuevaBrigada(idCuartelSeleccionado)) {
            String nombreBrigada = jTextField1.getText();

            
            if (nombreBrigada != null && !nombreBrigada.isEmpty() && contieneLetras1(nombreBrigada)) {
                
                if (briga.existeBrigadaConNombreEnCuartel(nombreBrigada, idCuartelSeleccionado)) {
                    JOptionPane.showMessageDialog(null, "Ya existe una brigada con el mismo nombre en este cuartel.");
                    hayErrores = true;
                } else {
                    String especialidad = (String) jCBEspecialidad.getSelectedItem();

                    // Crear y guardar la brigada
                    Brigada brigada = new Brigada();
                    brigada.setNombreBrig(nombreBrigada);
                    brigada.setEspecialidad(especialidad);
                    brigada.setIdCuartel(idCuartelSeleccionado);
                    brigada.setLibre(true);
                    brigada.setEstadoBr(true);
                    briga.guardarBrigada(brigada);
                    JOptionPane.showMessageDialog(null, "Brigada cargada");
                    limpiarCampos();
                }
            } else {
                JOptionPane.showMessageDialog(null, "El nombre de la brigada no es válido.");
                hayErrores = true;
            }
        } else {
            JOptionPane.showMessageDialog(null, "El cuartel está completo. No se puede agregar más brigadas.");
            hayErrores = true;
        }

        if (hayErrores) {
            limpiarCampos();
            limpiarTabla(jTBrigada);
            limpiarTabla(jTCuartel);
            inicioComponentes();
        }


    }//GEN-LAST:event_jBGuardarBrigadaActionPerformed

//-----------------------Boton guardar Bombero-------------------------
    private void jBGuardarBomberoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarBomberoActionPerformed
        idBrigadaSeleccionada = obtenerIdBrigadaSeleccionado();
        BrigadaIna();
        boolean hayErrores = false;

        if (bomb.hayCupoParaNuevoBombero(idBrigadaSeleccionada)) {
            String dniText = jTDNI.getText();
            String nombreApellido = jTNombre.getText();
            String grupoSanguineo = jTGrupo.getText();

            // Validar DNI
            if (!esDniValido(dniText)) {
                JOptionPane.showMessageDialog(null, "Por favor, ingrese un DNI válido.");
                limpiarCampos();
                hayErrores = true;
            }

            int dni = Integer.parseInt(dniText);

            // Validar nombre
            if (nombreApellido.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Por favor, ingrese un nombre válido.");
                limpiarCampos();
                hayErrores = true;
            }

            // Validar grupo sanguíneo
            if (grupoSanguineo.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Por favor, ingrese un grupo sanguíneo válido.");
                limpiarCampos();
                hayErrores = true;
            }

            java.util.Date sfecha = jdFechaNacimiento.getDate();
            LocalDate fechaNac = sfecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            if (!esMayorDe18Anios(fechaNac)) {
                JOptionPane.showMessageDialog(null, "El bombero debe ser mayor de 18 años.");
                limpiarCampos();
                hayErrores = true;
            }

            if (hayErrores) {
                JOptionPane.showMessageDialog(null, "Algun campo no cumple con los requisitos, vuelva a empezar");
                limpiarCampos();
                limpiarTabla(jTBrigada);
                limpiarTabla(jTCuartel);
                inicioComponentes();
            } else {
                if (bomb.existeBomberoConNombre(nombreApellido, dni)) {
                    JOptionPane.showMessageDialog(null, "Ya existe un bombero con el mismo nombre en esta brigada. No se puede agregar.");
                    limpiarCampos();
                    limpiarTabla(jTBrigada);
                    limpiarTabla(jTCuartel);
                    inicioComponentes();
                } else {
                    String celular = jTCelular.getText();
                    Bombero bombero = new Bombero();
                    bombero.setDni(dni);
                    bombero.setNombreApellido(nombreApellido);
                    bombero.setGrupoSanguineo(grupoSanguineo);
                    bombero.setFechaNac(fechaNac);
                    bombero.setCelular(celular);
                    bombero.setEstadoB(true);
                    bombero.setIdBrigada(idBrigadaSeleccionada);
                    bomb.guardarBombero(bombero);
                    limpiarCampos();
                    limpiarTabla(jTBrigada);
                    limpiarTabla(jTCuartel);
                    inicioComponentes();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Brigada Completa. No se puede agregar más bomberos.");
            limpiarCampos();
        }
        inicioComponentes();
    }

    private boolean esDniValido(String dniText) {
        // Verificar si el DNI es un número entero positivo
        try {
            int dni = Integer.parseInt(dniText);
            return dni > 0;
        } catch (NumberFormatException e) {
            return false;
        }


    }//GEN-LAST:event_jBGuardarBomberoActionPerformed

//-----------------------Fin Boton guardar Bombero-------------------------

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Correo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBGuardarBombero;
    private javax.swing.JButton jBGuardarBrigada;
    private javax.swing.JButton jBGuardarCuartel;
    private javax.swing.JButton jBSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jCBEspecialidad;
    private javax.swing.JTextField jCoordX;
    private javax.swing.JTextField jCoordY;
    private javax.swing.JTextField jCorreoCuartel;
    private javax.swing.JTextField jDireccionCuartel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jNombreCuartel;
    private javax.swing.JRadioButton jRBBombero;
    private javax.swing.JRadioButton jRBBrigada;
    private javax.swing.JRadioButton jRBCuartel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTBrigada;
    private javax.swing.JTextField jTCelular;
    private javax.swing.JTable jTCuartel;
    private javax.swing.JTextField jTDNI;
    private javax.swing.JTextField jTGrupo;
    private javax.swing.JTextField jTNombre;
    private javax.swing.JTextField jTelefonoCuartel;
    private javax.swing.JTextField jTextField1;
    private com.toedter.calendar.JDateChooser jdFechaNacimiento;
    // End of variables declaration//GEN-END:variables

//------------------------------------------JRADIOBUTTON--------------------------------------------------------------
//---------------------------------------INICIO (solo dejo habilitados los jRadioButton)------------------------------
    private void inicioComponentes() {
        jTCuartel.setEnabled(false);
        jTBrigada.setEnabled(false);
        jTDNI.setEnabled(false);
        jTNombre.setEnabled(false);
        jTGrupo.setEnabled(false);
        jdFechaNacimiento.setEnabled(false);
        jTCelular.setEnabled(false);
        jTextField1.setEnabled(false);
        jCBEspecialidad.setEnabled(false);
        jNombreCuartel.setEnabled(false);
        jDireccionCuartel.setEnabled(false);
        jCoordX.setEnabled(false);
        jCoordY.setEnabled(false);
        jTelefonoCuartel.setEnabled(false);
        jCorreoCuartel.setEnabled(false);
        jBSalir.setEnabled(true);
        jBGuardarCuartel.setEnabled(false);
        jBGuardarBombero.setEnabled(false);
        jBGuardarBrigada.setEnabled(false);

        jRBCuartel.setEnabled(true);
        jRBBrigada.setEnabled(true);
        jRBBombero.setEnabled(true);

        jRBCuartel.setSelected(false);
        jRBBrigada.setSelected(false);
        jRBBombero.setSelected(false);
    }

//---------------------------------------FIN INICIO--------------------------------------------------------     
//----------------------------------jRButon Cuartel seleccionado (deshabilita resto de los componentes)----------------------------------------   
    private void radioButtonCuartel() {
        jTCuartel.setEnabled(false);
        jTBrigada.setEnabled(false);
        jTDNI.setEnabled(false);
        jTNombre.setEnabled(false);
        jTGrupo.setEnabled(false);
        jdFechaNacimiento.setEnabled(false);
        jTCelular.setEnabled(false);
        jTextField1.setEnabled(false);
        jCBEspecialidad.setEnabled(false);
        jNombreCuartel.setEnabled(true);
        jDireccionCuartel.setEnabled(true);
        jCoordX.setEnabled(true);
        jCoordY.setEnabled(true);
        jTelefonoCuartel.setEnabled(true);
        jCorreoCuartel.setEnabled(true);
        jBSalir.setEnabled(true);
        jBGuardarCuartel.setEnabled(true);
        jBGuardarBombero.setEnabled(false);
        jBGuardarBrigada.setEnabled(false);
        jRBBrigada.setEnabled(false);
        jRBBombero.setEnabled(false);
    }
//----------------------------------FIN jRButon Cuartel seleccionado (deshabilita resto de los componentes)----------------------------------------   

//----------------------------------jRButon Brigada seleccionado (deshabilita resto de los componentes)----------------------------------------   
    private void radioButtonBrigada() {
        jTCuartel.setEnabled(true);
        jTBrigada.setEnabled(false);
        jTDNI.setEnabled(false);
        jTNombre.setEnabled(false);
        jTGrupo.setEnabled(false);
        jdFechaNacimiento.setEnabled(false);
        jTCelular.setEnabled(false);
        jTextField1.setEnabled(true);
        jCBEspecialidad.setEnabled(true);
        jNombreCuartel.setEnabled(false);
        jDireccionCuartel.setEnabled(false);
        jCoordX.setEnabled(false);
        jCoordY.setEnabled(false);
        jTelefonoCuartel.setEnabled(false);
        jCorreoCuartel.setEnabled(false);
        jBSalir.setEnabled(true);
        jBGuardarCuartel.setEnabled(false);
        jBGuardarBombero.setEnabled(false);
        jBGuardarBrigada.setEnabled(true);
        jRBCuartel.setEnabled(false);
        jRBBombero.setEnabled(false);

    }
//----------------------------------FIN jRButon Brigada seleccionado (deshabilita resto de los componentes)----------------------------------------  

//----------------------------------jRButon Bombero seleccionado (deshabilita resto de los componentes)----------------------------------------   
    private void radioButtonBombero() {
        jTCuartel.setEnabled(true);
        jTBrigada.setEnabled(true);
        jTDNI.setEnabled(true);
        jTNombre.setEnabled(true);
        jTGrupo.setEnabled(true);
        jdFechaNacimiento.setEnabled(true);
        jTCelular.setEnabled(true);
        jTextField1.setEnabled(false);
        jCBEspecialidad.setEnabled(false);
        jNombreCuartel.setEnabled(false);
        jDireccionCuartel.setEnabled(false);
        jCoordX.setEnabled(false);
        jCoordY.setEnabled(false);
        jTelefonoCuartel.setEnabled(false);
        jCorreoCuartel.setEnabled(false);
        jBSalir.setEnabled(true);
        jBGuardarCuartel.setEnabled(false);
        jBGuardarBombero.setEnabled(true);
        jBGuardarBrigada.setEnabled(false);
        jRBCuartel.setEnabled(false);
        jRBBrigada.setEnabled(false);
    }
//----------------------------------FIN jRButon Bombero seleccionado (deshabilita resto de los componentes)---------------------------------------- 

//------------------------------------------ FIN JRADIOBUTTON-----------------------------------------------------------------------------------    
//--------------------------------------------VALIDACIONES--------------------------------------------------------------
//---------------------------------------Validacion Cuartel----------------------------------------------------------
    private boolean contieneLetras(String input) {
        for (char c : input.toCharArray()) {
            if (Character.isLetter(c)) {
                return true; // Contiene al menos una letra
            }
        }
        return false; // No contiene letras
    }
//--------------------------------------Fin validacion cuartel-------------------------------------------------------   

//-------------------------Validacion Telefono Cuartel-----------------------------
// Validar si la cadena de numero ingresado es valido
    private boolean esNumeroValido(String input) {
        return input.matches("\\d+");
    }
//------------------------- Validacion Telefono Cuartel-----------------------------
//-------------------------------------------FIN VALIDACIONES--------------------------------------------------------    

//----------------------------metodo limpiar----------------------------------------------------------- 
//----------------------------fin metodo limpiar----------------------------------------------------------- 
    private void limpiarCampos() {
        //jTCuartel.setModel(new DefaultTableModel());
        //jTBrigada.setModel(new DefaultTableModel());
        jTCuartel.setEnabled(true);
        jTBrigada.setEnabled(true);
        jTDNI.setText("");
        jTNombre.setText("");
        jTGrupo.setText("");
        jdFechaNacimiento.setDate(null);
        jTCelular.setText("");
        jTextField1.setText("");
        jCBEspecialidad.setSelectedIndex(0);

        jNombreCuartel.setText("");
        jDireccionCuartel.setText("");
        jCoordX.setText("");
        jCoordY.setText("");
        jTelefonoCuartel.setText("");
        jCorreoCuartel.setText("");
        jTextField1.setText("");
    }

//------------------------------------------------------------------AGREGAR BRIGADA-----------------------------------------------------    
//-------------------LLena la tabla JCuartel-----------------------
    public void mostrarDatosCuartel() {
        DefaultTableModel tcuar = new DefaultTableModel();
        tcuar.addColumn("Id");
        tcuar.addColumn("Nombre");
        jTCuartel.setModel(tcuar);

        try {
            // Suponiendo que 'con' es tu conexión a la base de datos
            String consulta = "SELECT idCuartel, nombreCuartel FROM cuartel WHERE estadoC=1";
            PreparedStatement ps = con.prepareStatement(consulta);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Object[] fila = {
                    rs.getInt("idCuartel"),
                    rs.getString("nombreCuartel")
                };
                tcuar.addRow(fila);
            }

        } catch (Exception e) {
            e.printStackTrace();
            // Manejar la excepción según tus necesidades
        }
    }

    //-------------------Fin LLena la tabla JCuartel ------------------------
//-----------------------agregar especialidades brigadas-------------------------------------------
    private void llenarComboEspecialidades() {
        String[] especialidades = briga.Especialidades();
        jCBEspecialidad.setModel(new javax.swing.DefaultComboBoxModel<>(especialidades));
    }

//-----------------------fin agregar especialidades brigadas-------------------------------------------
    //----------------devuelve idCuartel seleccionado---------------------------------
    public int obtenerIdCuartelSeleccionado() {
        int selectedRow = jTCuartel.getSelectedRow();
        if (selectedRow != -1) {
            return (int) jTCuartel.getValueAt(selectedRow, 0);
        } else {
            JOptionPane.showMessageDialog(null, "Por favor, seleccione una fila.");
            return -1; //No hay fila seleccionada
        }
    }

    //--------------- fin devuelve idCuartel seleccionado-----------------------------
    //--------------inhabilita la tabla cuartel-------------------------------
    private void CuartelIna() {
        jTCuartel.setEnabled(false);

    }
    //--------------Fin inhabilita la tabla cuartel-------------------------------

    //--------------Hay al menos una letra en el nombre------------------------
    private boolean contieneLetras1(String str) {
        return str.matches(".*[a-zA-Z]+.*");
    }
    //-------------fin hay al menos una letra en el nombre------------------------ 

//--------------------------------------------------------------------AGREGAR BOMBERO----------------------------------------------------
    //-------------------LLena la tabla JBrigada-----------------------
    public void mostrarDatosBrigada() {
        DefaultTableModel tbrig = new DefaultTableModel();
        tbrig.addColumn("IdBrigada");
        tbrig.addColumn("Nombre de la brigada");
        tbrig.addColumn("Especialidad");
        tbrig.addColumn("Libre/Ocupada");
        tbrig.addColumn("IdCuartel");
        jTBrigada.setModel(tbrig);

        try {
            // Suponiendo que 'con' es tu conexión a la base de datos
            String consulta = "SELECT `idBrigada`, `nombreBrig`, `especialidad`, `libre`, `idCuartel` FROM `brigada` WHERE `estadoBr`=1";
            PreparedStatement ps = con.prepareStatement(consulta);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Object[] fila = {
                    rs.getInt("IdBrigada"),
                    rs.getString("nombreBrig"),
                    rs.getString("especialidad"),
                    rs.getString("libre"),
                    rs.getString("idCuartel")
                };
                tbrig.addRow(fila);
            }

        } catch (Exception e) {
            e.printStackTrace();
            // Manejar la excepción según tus necesidades
        }
    }

    //-------------------Fin LLena la tabla JBrigada------------------------
//----------------devuelve idBrigada seleccionada---------------------------------
    public int obtenerIdBrigadaSeleccionado() {
        int selectedRow = jTBrigada.getSelectedRow();
        if (selectedRow != -1) {
            return (int) jTBrigada.getValueAt(selectedRow, 0);
        } else {
            JOptionPane.showMessageDialog(null, "Por favor, seleccione una fila.");
            return -1; //No hay fila seleccionada
        }
    }

    //--------------- fin devuelve idBrigada seleccionado-----------------------------
    //--------------mayor a 18 años------------------------------------------
    private boolean esMayorDe18Anios(LocalDate fechaNacimiento) {
        // Obtener la fecha actual
        LocalDate fechaActual = LocalDate.now();

        // Calcular la diferencia en años
        int diferenciaAnios = Period.between(fechaNacimiento, fechaActual).getYears();

        // Verificar si la diferencia es mayor o igual a 18 años
        return diferenciaAnios >= 18;
    }
    //-------------- fin mayor a 18 años------------------------------------------   

//--------------------------------------------------------------------FIN AGREGAR BOMBERO----------------------------------------------------    
//---------------------------------------------------FIN METODOS----------------------------------------------------------     
    //--------------------------------------CABECERAS DE TABLAS----------------------------------------------------------------------------------      
//----------------------------------------------cabecera tabla cuartel------------------------------------------------
    private void cabeceraCuartel() {
        modelo.addColumn("IdCuartel");
        modelo.addColumn("Nombre del cuartel");
        jTCuartel.setModel(modelo);
    }

//----------------------------------------------fin cabecera tabla cuartel------------------------------------------------ 
//----------------------------------------------cabecera tabla brigada------------------------------------------------
    private void cabeceraBrigadal() {
        modelo1.addColumn("IdBrigada");
        modelo1.addColumn("Nombre de la brigada");
        modelo1.addColumn("Especialidad");
        modelo1.addColumn("Libre/Ocupada");
        modelo1.addColumn("IdCuartel");
        jTBrigada.setModel(modelo1);
    }

//----------------------------------------------fin cabecera tabla brigada------------------------------------------------ 
//--------------inhabilita la tabla brigada-------------------------------
    private void BrigadaIna() {
        jTBrigada.setEnabled(false);

    }
    //--------------Fin inhabilita la tabla brigada-------------------------------    

//--------------------------------------FIN DE CABECERAS DE TABLAS----------------------------------------------------------------------------------  
    private void limpiarTabla(JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
    }

}
